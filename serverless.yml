service: pits-api

custom:
  secrets: ${file(secrets.${self:provider.stage}.json)}

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-central-1
  stage: ${opt:stage, 'dev'}
  environment:
    JWT_SECRET: ${self:custom.secrets.JWT_SECRET}
    DB: ${self:custom.secrets.DB}

# todo split at one point in future
functions:

  #auth
  verify-token:
    handler: auth/VerifyToken.auth

  login:
    handler: auth/AuthHandler.login
    events:
      - http:
          path: login
          method: post
          cors: true

  register:
    handler: auth/AuthHandler.register
    events:
      - http:
          path: register
          method: post
          cors: true

  me:
    handler: auth/AuthHandler.me
    events:
      - http:
          path: me
          method: get
          cors: true
          authorizer: verify-token

  getUsers:
    handler: user/UserHandler.getUsers
    events:
      - http:
          path: users
          method: get
          cors: true

  #clipboard
  getClipboards:
    handler: clipboard/ClipboardHandler.getAll
    events:
      - http:
          path: clipboards
          method: get
          authorizer: verify-token
          cors: true

  deleteAllClipboards:
    handler: clipboard/ClipboardHandler.deleteAll
    events:
      - http:
          path: clipboards
          method: delete
          authorizer: verify-token
          cors: true

  createClipboard:
    handler: clipboard/ClipboardHandler.create
    events:
      - http:
          path: clipboards
          method: post
          authorizer: verify-token
          cors: true

  updateClipboard:
    handler: clipboard/ClipboardHandler.update
    events:
      - http:
          path: clipboards/{id}
          method: patch
          authorizer: verify-token
          cors: true
          
  removeClipboard:
    handler: clipboard/ClipboardHandler.remove
    events:
      - http:
          path: clipboards/{id}
          method: delete
          authorizer: verify-token
          cors: true

  updateItem:
    handler: clipboard/ClipboardHandler.updateItem
    events:
      - http:
          path: clipboards/{id}/items/{item_id}
          method: patch
          authorizer: verify-token
          cors: true

  deleteItem:
    handler: clipboard/ClipboardHandler.deleteItem
    events:
      - http:
          path: clipboards/{id}/items/{item_id}
          method: delete
          authorizer: verify-token
          cors: true
          
  addItem:
    handler: clipboard/ClipboardHandler.addItem
    events:
      - http:
          path: clipboards/{id}/items
          method: post
          authorizer: verify-token
          cors: true

  #dairy
  getDairies:
    handler: dairy/DairyHandler.getAll
    events:
      - http:
          path: dairies
          method: get
          authorizer: verify-token
          cors: true

  removeAllDairies:
    handler: dairy/DairyHandler.removeAll
    events:
      - http:
          path: dairies
          method: delete
          authorizer: verify-token
          cors: true

  createDairy:
    handler: dairy/DairyHandler.create
    events:
      - http:
          path: dairies
          method: post
          authorizer: verify-token
          cors: true

  updateDairy:
    handler: dairy/DairyHandler.update
    events:
      - http:
          path: dairies/{id}
          method: patch
          authorizer: verify-token
          cors: true
          
  removeDairy:
    handler: dairy/DairyHandler.remove
    events:
      - http:
          path: dairies/{id}
          method: delete
          authorizer: verify-token
          cors: true

  #shopping list
  getShoppingLists:
    handler: shopping-list/ShoppingListHandler.getAll
    events:
      - http:
          path: shopping-lists
          method: get
          authorizer: verify-token
          cors: true

  deleteAllShoppingLists:
    handler: shopping-list/ShoppingListHandler.deleteAll
    events:
      - http:
          path: shopping-lists
          method: delete
          authorizer: verify-token
          cors: true

  createShoppingList:
    handler: shopping-list/ShoppingListHandler.create
    events:
      - http:
          path: shopping-lists
          method: post
          authorizer: verify-token
          cors: true

  updateShoppingList:
    handler: shopping-list/ShoppingListHandler.update
    events:
      - http:
          path: shopping-lists/{id}
          method: patch
          authorizer: verify-token
          cors: true
          
  removeShoppingList:
    handler: shopping-list/ShoppingListHandler.remove
    events:
      - http:
          path: shopping-lists/{id}
          method: delete
          authorizer: verify-token
          cors: true

  updateShoppingListItem:
    handler: shopping-list/ShoppingListHandler.updateItem
    events:
      - http:
          path: shopping-lists/{id}/items/{item_id}
          method: patch
          authorizer: verify-token
          cors: true

  deleteShoppingListItem:
    handler: shopping-list/ShoppingListHandler.deleteItem
    events:
      - http:
          path: shopping-lists/{id}/items/{item_id}
          method: delete
          authorizer: verify-token
          cors: true
          
  addShoppingListItem:
    handler: shopping-list/ShoppingListHandler.addItem
    events:
      - http:
          path: shopping-lists/{id}/items
          method: post
          authorizer: verify-token
          cors: true
plugins:
  - serverless-offline